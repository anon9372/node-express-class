1) Installing globally = npm i packageName -globally
2) As a dependency: npm i packageName
3) As a devDependency: npm i packageName -D


Event Loop -> Event loop allows nodejs to perform non-blocking I/O operations, despite JS being a single threaded language.
                (https://www.youtube.com/watch?v=PNa9OMajw9w)

Global Variables:
// GLOBALS  - NO WINDOW !!!!

// __dirname  - path to current directory
// __filename - file name
// require    - function to use modules (CommonJS)
// module     - info about current module (file)
// process    - info about env where the program is being executed

Async pattern - Blocking Code
Async Pattern - Setup Promises 
Async Pattern - Refactor to Async
Event emitter - What is Event emitter?  -- > Event emitter is a module that helps in communicating with node objects, just like events that we trigger in a browser environment.

Steps to create a server in NodeJS using HTTP Module:
1) Import or require HTTP Module
2) Create a server and within that create routes.
3) Start the server

Event emitter - Code.


====================================================
TCP AND UDP Protocols

Streams: 

1) Writeable -> Used to write data sequentially
2) Readable -> Used to read data sequentially
3) Duplex -> Used to do both of the above
4) Transform -> Modifying data when reading or writing

Stream breaks a file into pieces of smaller files each with default size of around 65kb




// ================ EXPRESS ====================== //


API vs SSR 

API => Application Programming Interface
        - JSON
        - Send the 'Data'
        - res.json()

SSR => Server Side Rendering
        - Template
        - Send the 'Template'
        - res.render()